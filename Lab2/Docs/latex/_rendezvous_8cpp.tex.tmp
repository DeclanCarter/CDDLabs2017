\hypertarget{_rendezvous_8cpp}{}\section{Rendezvous.\+cpp File Reference}
\label{_rendezvous_8cpp}\index{Rendezvous.\+cpp@{Rendezvous.\+cpp}}
{\ttfamily \#include \char`\"{}Semaphore.\+h\char`\"{}}\\*
{\ttfamily \#include $<$iostream$>$}\\*
{\ttfamily \#include $<$thread$>$}\\*
Include dependency graph for Rendezvous.\+cpp\+:
% FIG 0
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
void \hyperlink{_rendezvous_8cpp_afceba4276b338fe07cd94dcc6f2c0f6c}{task\+One} (std\+::shared\+\_\+ptr$<$ \hyperlink{class_semaphore}{Semaphore} $>$ sem1, std\+::shared\+\_\+ptr$<$ \hyperlink{class_semaphore}{Semaphore} $>$ sem2)
\item 
void \hyperlink{_rendezvous_8cpp_a6d9d35c37be2a590f4e80965b9080bf8}{task\+Two} (std\+::shared\+\_\+ptr$<$ \hyperlink{class_semaphore}{Semaphore} $>$ sem1, std\+::shared\+\_\+ptr$<$ \hyperlink{class_semaphore}{Semaphore} $>$ sem2)
\item 
int \hyperlink{_rendezvous_8cpp_a840291bc02cba5474a4cb46a9b9566fe}{main} (void)
\end{DoxyCompactItemize}


\subsection{Function Documentation}
\index{Rendezvous.\+cpp@{Rendezvous.\+cpp}!main@{main}}
\index{main@{main}!Rendezvous.\+cpp@{Rendezvous.\+cpp}}
\subsubsection[{\texorpdfstring{main(void)}{main(void)}}]{\setlength{\rightskip}{0pt plus 5cm}int main (
\begin{DoxyParamCaption}
\item[{void}]{}
\end{DoxyParamCaption}
)}\hypertarget{_rendezvous_8cpp_a840291bc02cba5474a4cb46a9b9566fe}{}\label{_rendezvous_8cpp_a840291bc02cba5474a4cb46a9b9566fe}
$<$ Launch the threads \index{Rendezvous.\+cpp@{Rendezvous.\+cpp}!task\+One@{task\+One}}
\index{task\+One@{task\+One}!Rendezvous.\+cpp@{Rendezvous.\+cpp}}
\subsubsection[{\texorpdfstring{task\+One(std\+::shared\+\_\+ptr$<$ Semaphore $>$ sem1, std\+::shared\+\_\+ptr$<$ Semaphore $>$ sem2)}{taskOne(std::shared_ptr< Semaphore > sem1, std::shared_ptr< Semaphore > sem2)}}]{\setlength{\rightskip}{0pt plus 5cm}void task\+One (
\begin{DoxyParamCaption}
\item[{std\+::shared\+\_\+ptr$<$ {\bf Semaphore} $>$}]{sem1, }
\item[{std\+::shared\+\_\+ptr$<$ {\bf Semaphore} $>$}]{sem2}
\end{DoxyParamCaption}
)}\hypertarget{_rendezvous_8cpp_afceba4276b338fe07cd94dcc6f2c0f6c}{}\label{_rendezvous_8cpp_afceba4276b338fe07cd94dcc6f2c0f6c}
$\ast$\+Arthur\+: Declan Carter Date Created\+: 6/10/17 Latest update\+: 11/10/17 Version 1.\+0.\+0 Copyright\+: M\+IT License

Using semaphores to schedule when threads proceed. Thread A1 will print out first, Thread B1 will print before Thread A2 and Thread B2 will print last. \index{Rendezvous.\+cpp@{Rendezvous.\+cpp}!task\+Two@{task\+Two}}
\index{task\+Two@{task\+Two}!Rendezvous.\+cpp@{Rendezvous.\+cpp}}
\subsubsection[{\texorpdfstring{task\+Two(std\+::shared\+\_\+ptr$<$ Semaphore $>$ sem1, std\+::shared\+\_\+ptr$<$ Semaphore $>$ sem2)}{taskTwo(std::shared_ptr< Semaphore > sem1, std::shared_ptr< Semaphore > sem2)}}]{\setlength{\rightskip}{0pt plus 5cm}void task\+Two (
\begin{DoxyParamCaption}
\item[{std\+::shared\+\_\+ptr$<$ {\bf Semaphore} $>$}]{sem1, }
\item[{std\+::shared\+\_\+ptr$<$ {\bf Semaphore} $>$}]{sem2}
\end{DoxyParamCaption}
)}\hypertarget{_rendezvous_8cpp_a6d9d35c37be2a590f4e80965b9080bf8}{}\label{_rendezvous_8cpp_a6d9d35c37be2a590f4e80965b9080bf8}
